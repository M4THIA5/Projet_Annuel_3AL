// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  output          = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_DATABASE_URL")
}

model User {
  id     Int    @id @default(autoincrement())
  email  String @unique
  nom    String
  prenom String
  color  String @default("212529")

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  password String

  Score             Score[]
  roles             Role[]
  userNeighborhoods UserNeighborhood[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Game {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String
  Score       Score[]
}

model Score {
  id        Int      @id @default(autoincrement())
  score     Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    Int
  createdAt DateTime @default(now())
}

model Data {
  id   Int    @id @default(autoincrement())
  data String
}

model Neighborhood {
  id          Int       @id @default(autoincrement())
  name        String
  city        String?
  postalCode  String?
  members     Int       @default(1)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  description String?
  image       Bytes?

  userNeighborhoods UserNeighborhood[]
}

model UserNeighborhood {
  id             Int      @id @default(autoincrement())
  userId         Int
  neighborhoodId Int
  joinedAt       DateTime @default(now())
  roleInArea     String?

  user         User         @relation(fields: [userId], references: [id])
  neighborhood Neighborhood @relation(fields: [neighborhoodId], references: [id])
}
