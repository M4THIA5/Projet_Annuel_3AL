// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator postgresClient {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  output          = "../client/postgresClient"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  roles        String[] @default(["classic"])
  refreshToken String?
  firstName    String?
  lastName     String?
  color        String   @default("212529")
  image        String?

  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt
  serviceAsker    Service[] @relation("ServiceAsker")
  serviceProvider Service[] @relation("ServiceProvider")

  Score             Score[]
  userNeighborhoods UserNeighborhood[]
}

model Game {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String
  Score       Score[]
}

model Score {
  id        Int      @id @default(autoincrement())
  score     Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    Int
  createdAt DateTime @default(now())
}

model Service {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  asker       User     @relation("ServiceAsker", fields: [askerId], references: [id])
  askerId     Int
  open        Boolean  @default(true)
  ended       Boolean  @default(false)
  provider    User?    @relation("ServiceProvider", fields: [providerId], references: [id])
  providerId  Int?
  createdAt   DateTime @default(now())
}

model Neighborhood {
  id          Int       @id @default(autoincrement())
  name        String
  city        String?
  postalCode  String?
  members     Int       @default(1)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  description String?
  image       Bytes?

  userNeighborhoods UserNeighborhood[]
}

model UserNeighborhood {
  id             Int      @id @default(autoincrement())
  userId         Int
  neighborhoodId Int
  joinedAt       DateTime @default(now())
  roleInArea     String?

  user         User         @relation(fields: [userId], references: [id])
  neighborhood Neighborhood @relation(fields: [neighborhoodId], references: [id])
}
