name: Create new release

permissions:
  contents: write
  packages: write
on:
  push:
    paths:
      - 'JavaWebScraper/app/pom.xml'
      - 'JavaWebScraper/cli/pom.xml'
      - 'JavaWebScraper/pom.xml'
jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Set up JDK 24
          uses: actions/setup-java@v2
          with:
            java-version: '24'
            distribution: 'temurin'
        - name: Build with maven
          run: cd JavaWebScraper && chmod +x builder.sh && ./builder.sh
        #        - name: Create release # créer l'installer ???
        #          id: create_release
        #          uses: softprops/action-gh-release@v1
        #          with:
        #            tag_name: v1.0.0
        #            release_name: Release v1.0.0
        #            body: |
        #                This is the release notes for version 1.0.0.
        #          env:
        #            GITHUB_TOKEN: ${{ github.token }}
        - name: Deploy project with SSH
          uses: easingthemes/ssh-deploy@v2.1.4
          env:
            SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
            REMOTE_HOST: ${{ secrets.HOST }}
            REMOTE_USER: ${{ secrets.USERNAME }}
            SOURCE: "./"
            TARGET: "~/java"
        - name: Get app shared version with Maven
          id: get_app_shared_version
          run: |
            cd JavaWebScraper/app
            VERSION=$(mvn help:evaluate -Dexpression=project.version.shared -q -DforceStdout)
            echo "Shared app version: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
        - name: Check if version is resolved
          run: |
            if [ "${{ steps.get_app_shared_version.outputs.version }}" = '${project.version.shared}' ]; then
              echo "ERROR: property project.version.shared is not defined!"
              exit 1
            fi
        - name: Deploy using ssh
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.PRIVATE_KEY }}
            port: 22
            script: |
              chmod +x java/JavaWebScraper/create-release.sh
              echo "./java/JavaWebScraper/create-release.sh ${{ secrets.PATHTOJAVA }} "nom" v1.0.0 ${{ secrets.URL }}app-${{ steps.get_app_shared_version.outputs.version }}jar app-${{ steps.get_app_shared_version.outputs.version }}jar ${{ secrets.URL }}cli-${{ steps.get_app_shared_version.outputs.version }}jar cli-${{ steps.get_app_shared_version.outputs.version }}jar"
              ./java/JavaWebScraper/create-release.sh ${{ secrets.PATHTOJAVA }} "nom" v1.0.0 ${{ secrets.URL }}app-${{ steps.get_app_shared_version.outputs.version }}jar app-${{ steps.get_app_shared_version.outputs.version }}jar ${{ secrets.URL }}cli-${{ steps.get_app_shared_version.outputs.version }}jar cli-${{ steps.get_app_shared_version.outputs.version }}jar

## release.sh doit modifier versions.json, build le projet et mettre jar à disposition
